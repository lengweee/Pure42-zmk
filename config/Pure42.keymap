/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick-tap-ms = <200>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";

        a {
            bindings = <&kp ESCAPE>;
            key-positions = <21 22>;
        };

        b {
            bindings = <&kp TAB>;
            key-positions = <0 1>;
        };

        c {
            bindings = <&kp CAPSLOCK>;
            key-positions = <21 20>;
        };

        d {
            bindings = <&kp BACKSLASH>;
            key-positions = <9 8>;
        };

        e {
            bindings = <&kp SINGLE_QUOTE>;
            key-positions = <19 18>;
        };

        f {
            bindings = <&kp EQUAL>;
            key-positions = <11 12>;
        };

        g {
            bindings = <&kp MINUS>;
            key-positions = <17 18>;
        };

        ToggleNum {
            bindings = <&tog 2>;
            key-positions = <32 39>;
        };

        tilde {
            bindings = <&kp GRAVE>;
            key-positions = <29 28>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W         &kp E  &kp R           &kp T                                      &kp Y      &kp U                  &kp I      &kp O          &kp P
&kp A             &kp S         &kp D  &kp F           &kp G                                      &kp H      &kp J                  &kp K      &kp L          &kp SEMI
&lt 1 Z           &kp X         &kp C  &kp V           &kp B                                      &kp N      &kp M                  &kp COMMA  &kp DOT        &lt 1 SLASH
&kp LEFT_CONTROL  &kp LEFT_ALT  &mo 2  &kp LEFT_SHIFT  &kp BACKSPACE  &kp LEFT_GUI  &kp LEFT_GUI  &kp ENTER  &mt RIGHT_SHIFT SPACE  &mo 2      &kp RIGHT_ALT  &kp RIGHT_CONTROL
            >;
        };

        move_layer {
            bindings = <
&kp F6      &kp F6        &kp F7        &kp F8        &kp F9                       &none        &kp PAGE_UP  &kp PAGE_DOWN  &none      &none
&kp F1      &kp F2        &kp F3        &kp F4        &kp F5                       &kp LEFT     &kp DOWN     &kp UP_ARROW   &kp RIGHT  &none
&bt BT_CLR  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0  &bootloader                  &bootloader  &kp HOME     &kp END        &none      &none
&trans      &trans        &none         &trans        &trans       &trans  &trans  &trans       &trans       &trans         &trans     &trans
            >;
        };

        num_layer {
            bindings = <
&kp LS(N1)  &kp LS(N2)  &kp LS(N3)  &kp LS(N4)  &kp LS(N5)                  &kp LS(N6)    &kp LS(N7)      &kp LS(N8)       &kp LS(N9)        &kp LS(N0)
&kp N1      &kp N2      &kp N3      &kp N4      &kp N5                      &kp NUMBER_6  &kp N7          &kp N8           &kp N9            &kp N0
&trans      &trans      &trans      &trans      &trans                      &trans        &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp LEFT_BRACKET  &kp RIGHT_BRACKET
&trans      &trans      &tog 2      &trans      &trans      &trans  &trans  &trans        &trans          &tog 2           &trans            &trans
            >;
        };

        layer_3 {
            bindings = <
&trans  &trans          &kp UP_ARROW    &trans     &trans                  &trans  &trans  &trans  &trans  &trans
&trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT  &trans                  &trans  &trans  &trans  &trans  &trans
&trans  &trans          &trans          &trans     &trans                  &trans  &trans  &trans  &trans  &trans
&trans  &trans          &trans          &trans     &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
